/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.69.1
  Forc version: 0.46.1
  Fuel-Core version: 0.20.8
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum, Vec } from "./common";

export enum ErrorInput { AccessDenied = 'AccessDenied' }
export enum ErrorOutput { AccessDenied = 'AccessDenied' }

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;
export type SparkContractsInput = { version: BigNumberish, account_balance_address: AddressInput, clearing_house_address: AddressInput, insurance_fund_address: AddressInput, treasury_address: AddressInput, perp_market_address: AddressInput, vault_address: AddressInput, pyth_address: AddressInput };
export type SparkContractsOutput = { version: BN, account_balance_address: AddressOutput, clearing_house_address: AddressOutput, insurance_fund_address: AddressOutput, treasury_address: AddressOutput, perp_market_address: AddressOutput, vault_address: AddressOutput, pyth_address: AddressOutput };

export type ProxyAbiConfigurables = {
  OWNER: AddressInput;
};

interface ProxyAbiInterface extends Interface {
  functions: {
    get_all_spark_contracts_versions: FunctionFragment;
    get_spark_contracts: FunctionFragment;
    get_spark_contracts_by_version: FunctionFragment;
    publish_new_version: FunctionFragment;
    version: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'get_all_spark_contracts_versions', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'get_spark_contracts', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'get_spark_contracts_by_version', values: [BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'publish_new_version', values: [AddressInput, AddressInput, AddressInput, AddressInput, AddressInput, AddressInput, AddressInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'version', values: []): Uint8Array;

  decodeFunctionData(functionFragment: 'get_all_spark_contracts_versions', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_spark_contracts', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_spark_contracts_by_version', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'publish_new_version', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'version', data: BytesLike): DecodedValue;
}

export class ProxyAbi extends Contract {
  interface: ProxyAbiInterface;
  functions: {
    get_all_spark_contracts_versions: InvokeFunction<[], Vec<SparkContractsOutput>>;
    get_spark_contracts: InvokeFunction<[], SparkContractsOutput>;
    get_spark_contracts_by_version: InvokeFunction<[version: BigNumberish], SparkContractsOutput>;
    publish_new_version: InvokeFunction<[account_balance_address: AddressInput, clearing_house_address: AddressInput, insurance_fund_address: AddressInput, treasury_address: AddressInput, perp_market_address: AddressInput, vault_address: AddressInput, pyth_address: AddressInput], void>;
    version: InvokeFunction<[], BN>;
  };
}
